# Generated by Django 4.0.1 on 2022-01-13 05:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcaAlias',
            fields=[
                ('alias', models.CharField(max_length=500)),
                ('target_value', models.CharField(max_length=5000)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('date_added', models.BigIntegerField()),
                ('added_by', models.CharField(max_length=100)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'aca_alias',
            },
        ),
        migrations.CreateModel(
            name='AcaAuthclient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('clientuid', models.CharField(db_column='clientUid', max_length=50)),
                ('connecturi', models.CharField(db_column='connectUri', max_length=500)),
                ('redirecturi', models.CharField(db_column='redirectUri', max_length=500)),
                ('secret', models.CharField(blank=True, max_length=200, null=True)),
                ('approved', models.IntegerField()),
                ('apptable', models.CharField(blank=True, db_column='appTable', max_length=20, null=True)),
                ('remoteid', models.IntegerField(blank=True, db_column='remoteId', null=True)),
                ('autoscopes', models.CharField(blank=True, db_column='autoScopes', max_length=1000, null=True)),
                ('createdon', models.IntegerField(db_column='createdOn')),
                ('lastmodifiedon', models.IntegerField(db_column='lastModifiedOn')),
                ('firstapprovedon', models.IntegerField(blank=True, db_column='firstApprovedOn', null=True)),
                ('lastapprovedon', models.IntegerField(blank=True, db_column='lastApprovedOn', null=True)),
            ],
            options={
                'db_table': 'aca_authclient',
            },
        ),
        migrations.CreateModel(
            name='AcaAuthcode',
            fields=[
                ('id', models.CharField(max_length=125, primary_key=True, serialize=False)),
                ('clientuid', models.CharField(db_column='clientUid', max_length=50)),
                ('redirecturi', models.CharField(db_column='redirectUri', max_length=500)),
                ('expires', models.IntegerField()),
                ('scope', models.CharField(blank=True, max_length=1000, null=True)),
                ('refreshcode', models.CharField(blank=True, db_column='refreshCode', max_length=20, null=True)),
            ],
            options={
                'db_table': 'aca_authcode',
            },
        ),
        migrations.CreateModel(
            name='AcaAuthscope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientuid', models.CharField(db_column='clientUid', max_length=50)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('scope', models.CharField(blank=True, max_length=1000, null=True)),
                ('createdon', models.IntegerField(blank=True, db_column='createdOn', null=True)),
                ('updatedon', models.IntegerField(blank=True, db_column='updatedOn', null=True)),
            ],
            options={
                'db_table': 'aca_authscope',
            },
        ),
        migrations.CreateModel(
            name='AcaAuthtoken',
            fields=[
                ('id', models.CharField(max_length=125, primary_key=True, serialize=False)),
                ('clientuid', models.CharField(db_column='clientUid', max_length=50)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('codeid', models.CharField(blank=True, db_column='codeId', max_length=125, null=True)),
                ('expires', models.IntegerField()),
                ('scope', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'aca_authtoken',
            },
        ),
        migrations.CreateModel(
            name='AcaBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField(blank=True, null=True)),
                ('end', models.IntegerField(blank=True, null=True)),
                ('notification', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aca_batch',
            },
        ),
        migrations.CreateModel(
            name='AcaChip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('txnitemid', models.CharField(blank=True, db_column='txnItemId', max_length=45, null=True)),
                ('dateassigned', models.IntegerField(db_column='dateAssigned')),
                ('userfullname', models.CharField(blank=True, db_column='userFullName', max_length=500, null=True)),
            ],
            options={
                'db_table': 'aca_chip',
            },
        ),
        migrations.CreateModel(
            name='AcaClub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acaclubnumber', models.CharField(blank=True, db_column='acaClubNumber', max_length=255, null=True)),
                ('usacclubnumber', models.CharField(blank=True, db_column='usacClubNumber', max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('expires', models.IntegerField(blank=True, null=True)),
                ('daterenewed', models.DateField(blank=True, db_column='dateRenewed', null=True)),
                ('datejoined', models.DateField(blank=True, db_column='dateJoined', null=True)),
                ('amountpaid', models.CharField(blank=True, db_column='amountPaid', max_length=255, null=True)),
                ('startdate', models.IntegerField(blank=True, db_column='startDate', null=True)),
                ('sm', models.IntegerField(blank=True, null=True)),
                ('sw', models.IntegerField(blank=True, null=True)),
                ('j', models.IntegerField(blank=True, null=True)),
                ('mm', models.IntegerField(blank=True, null=True)),
                ('mw', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aca_club',
            },
        ),
        migrations.CreateModel(
            name='AcaCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('xfactor', models.IntegerField(blank=True, db_column='xFactor', null=True)),
                ('dateadded', models.IntegerField(blank=True, db_column='dateAdded', null=True)),
                ('dateexpired', models.IntegerField(blank=True, db_column='dateExpired', null=True)),
            ],
            options={
                'db_table': 'aca_credential',
            },
        ),
        migrations.CreateModel(
            name='AcaDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('dateadded', models.IntegerField(db_column='dateAdded')),
                ('addedby', models.CharField(db_column='addedBy', max_length=45)),
            ],
            options={
                'db_table': 'aca_department',
            },
        ),
        migrations.CreateModel(
            name='AcaEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('eventdate', models.IntegerField(blank=True, db_column='eventDate', null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('pdf', models.CharField(blank=True, max_length=255, null=True)),
                ('eventtype', models.CharField(blank=True, db_column='eventType', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('calendar', models.IntegerField(blank=True, null=True)),
                ('racesize', models.IntegerField(blank=True, db_column='raceSize', null=True)),
                ('eventcity', models.CharField(blank=True, db_column='eventCity', max_length=255, null=True)),
                ('eventstate', models.CharField(blank=True, db_column='eventState', max_length=255, null=True)),
                ('stagecomponent', models.IntegerField(blank=True, db_column='stageComponent', null=True)),
                ('pointscompetitionids', models.CharField(blank=True, db_column='pointsCompetitionIds', max_length=127, null=True)),
                ('permitnumbers', models.CharField(blank=True, db_column='permitNumbers', max_length=127, null=True)),
                ('doublepoints', models.IntegerField(blank=True, db_column='doublePoints', null=True)),
                ('pointscompetitionjson', models.CharField(blank=True, db_column='pointsCompetitionJSON', max_length=127, null=True)),
                ('calendarfeepaid', models.DecimalField(blank=True, db_column='calendarFeePaid', decimal_places=2, max_digits=10, null=True)),
                ('competitionfeepaid', models.DecimalField(blank=True, db_column='competitionFeePaid', decimal_places=2, max_digits=10, null=True)),
                ('isacaevent', models.IntegerField(db_column='isACAEvent')),
                ('parentid', models.IntegerField(blank=True, db_column='parentId', null=True)),
                ('pointquantifier', models.FloatField(blank=True, db_column='pointQuantifier', null=True)),
            ],
            options={
                'db_table': 'aca_event',
            },
        ),
        migrations.CreateModel(
            name='AcaEventpointquantifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventid', models.PositiveIntegerField(db_column='eventId')),
                ('racegroupid', models.PositiveIntegerField(db_column='racegroupId')),
                ('pointquantifier', models.DecimalField(db_column='pointQuantifier', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'aca_eventpointquantifier',
            },
        ),
        migrations.CreateModel(
            name='AcaEventtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('ptype', models.CharField(blank=True, db_column='pType', max_length=255, null=True)),
                ('utype', models.CharField(blank=True, db_column='uType', max_length=1, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('discipline', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'aca_eventtype',
            },
        ),
        migrations.CreateModel(
            name='AcaNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('categoryid', models.IntegerField(blank=True, db_column='categoryId', null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'aca_news',
            },
        ),
        migrations.CreateModel(
            name='AcaPointscompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('seasonbegin', models.DateField(blank=True, db_column='seasonBegin', null=True)),
                ('seasonend', models.DateField(blank=True, db_column='seasonEnd', null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('pctype', models.CharField(blank=True, db_column='pcType', max_length=1, null=True)),
                ('iconpath', models.CharField(blank=True, db_column='iconPath', max_length=255, null=True)),
                ('competitiontypesjson', models.CharField(blank=True, db_column='competitionTypesJSON', max_length=1023, null=True)),
                ('depthjson', models.CharField(db_column='depthJSON', max_length=500)),
                ('lastrun', models.IntegerField(blank=True, db_column='lastRun', null=True)),
            ],
            options={
                'db_table': 'aca_pointscompetition',
            },
        ),
        migrations.CreateModel(
            name='AcaPointscompetitionraceresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('racegroupname', models.CharField(blank=True, db_column='raceGroupName', max_length=255, null=True)),
                ('date', models.IntegerField(blank=True, null=True)),
                ('place', models.IntegerField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('racename', models.CharField(blank=True, db_column='raceName', max_length=255, null=True)),
                ('racetype', models.CharField(blank=True, db_column='raceType', max_length=255, null=True)),
                ('clubno', models.IntegerField(blank=True, db_column='clubNo', null=True)),
                ('pointscompetitionid', models.IntegerField(blank=True, db_column='pointsCompetitionId', null=True)),
                ('racegroupid', models.IntegerField(blank=True, db_column='raceGroupId', null=True)),
                ('eventid', models.IntegerField(blank=True, db_column='eventId', null=True)),
                ('starters', models.IntegerField(blank=True, null=True)),
                ('category', models.IntegerField(blank=True, null=True)),
                ('counts', models.IntegerField(blank=True, null=True)),
                ('special', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'aca_pointscompetitionraceresult',
            },
        ),
        migrations.CreateModel(
            name='AcaPointscompetitionresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('acamembership', models.IntegerField(blank=True, db_column='acaMembership', null=True)),
                ('clubno', models.IntegerField(blank=True, db_column='clubNo', null=True)),
                ('team', models.CharField(blank=True, max_length=255, null=True)),
                ('currentcat', models.CharField(blank=True, db_column='currentCat', max_length=255, null=True)),
                ('racingage', models.IntegerField(blank=True, db_column='racingAge', null=True)),
                ('pointscompetitionid', models.IntegerField(blank=True, db_column='pointsCompetitionId', null=True)),
                ('datecreated', models.IntegerField(blank=True, db_column='dateCreated', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('racegroupid', models.IntegerField(blank=True, db_column='raceGroupId', null=True)),
                ('category', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('special', models.CharField(blank=True, max_length=45, null=True)),
                ('usac', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aca_pointscompetitionresult',
            },
        ),
        migrations.CreateModel(
            name='AcaPointscompetitiontype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('pointscompetitionid', models.IntegerField(blank=True, db_column='pointscompetitionId', null=True)),
            ],
            options={
                'db_table': 'aca_pointscompetitiontype',
            },
        ),
        migrations.CreateModel(
            name='AcaProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('dateadded', models.IntegerField(db_column='dateAdded')),
                ('addedby', models.CharField(db_column='addedBy', max_length=45)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('units', models.IntegerField(blank=True, null=True)),
                ('visible', models.IntegerField(blank=True, null=True)),
                ('deleted', models.IntegerField(blank=True, null=True)),
                ('actions', models.CharField(blank=True, max_length=500, null=True)),
                ('departmentid', models.ForeignKey(blank=True, db_column='departmentId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acadepartment')),
            ],
            options={
                'db_table': 'aca_product',
            },
        ),
        migrations.CreateModel(
            name='AcaProductoption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('dateadded', models.IntegerField(db_column='dateAdded')),
                ('addedby', models.CharField(db_column='addedBy', max_length=45)),
                ('visible', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('productid', models.ForeignKey(db_column='productId', on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaproduct')),
            ],
            options={
                'db_table': 'aca_productoption',
            },
        ),
        migrations.CreateModel(
            name='AcaRacegroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('loweragelimit', models.IntegerField(blank=True, db_column='lowerAgeLimit', null=True)),
                ('upperagelimit', models.IntegerField(blank=True, db_column='upperAgeLimit', null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('sortorder', models.IntegerField(blank=True, db_column='sortOrder', null=True)),
                ('sanctioned', models.IntegerField(blank=True, null=True)),
                ('tttpointstype', models.CharField(blank=True, db_column='tttPointsType', max_length=1, null=True)),
                ('category', models.IntegerField(blank=True, null=True)),
                ('minbib', models.IntegerField(blank=True, db_column='minBib', null=True)),
                ('maxbib', models.IntegerField(blank=True, db_column='maxBib', null=True)),
                ('mincategory', models.IntegerField(blank=True, db_column='minCategory', null=True)),
                ('maxcategory', models.IntegerField(blank=True, db_column='maxCategory', null=True)),
                ('feeexempt', models.IntegerField(db_column='feeExempt')),
                ('alwaysincludepc', models.IntegerField(db_column='alwaysIncludePC')),
                ('groupid', models.IntegerField(blank=True, db_column='groupId', null=True)),
            ],
            options={
                'db_table': 'aca_racegroup',
            },
        ),
        migrations.CreateModel(
            name='AcaRacegrouptemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdat', models.IntegerField(db_column='createdAt')),
                ('updatedat', models.IntegerField(db_column='updatedAt')),
                ('addedby', models.CharField(db_column='addedBy', max_length=45)),
                ('disc', models.CharField(max_length=45)),
                ('name', models.CharField(max_length=512)),
                ('description', models.CharField(max_length=1024)),
                ('visible', models.IntegerField()),
            ],
            options={
                'db_table': 'aca_racegrouptemplate',
            },
        ),
        migrations.CreateModel(
            name='AcaResultset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('starters', models.IntegerField(blank=True, null=True)),
                ('published', models.IntegerField(blank=True, null=True)),
                ('finishphoto', models.CharField(blank=True, db_column='finishPhoto', max_length=255, null=True)),
                ('laptimes', models.CharField(blank=True, db_column='lapTimes', max_length=255, null=True)),
                ('eventid', models.ForeignKey(blank=True, db_column='eventId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaevent')),
            ],
            options={
                'db_table': 'aca_resultset',
            },
        ),
        migrations.CreateModel(
            name='AcaScheduledaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('rundate', models.IntegerField(blank=True, db_column='runDate', null=True)),
                ('completed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aca_scheduledaction',
            },
        ),
        migrations.CreateModel(
            name='AcaSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.TextField(blank=True, null=True)),
                ('createdon', models.DateTimeField(db_column='createdOn')),
                ('lastmodifiedon', models.IntegerField(db_column='lastModifiedOn')),
            ],
            options={
                'db_table': 'aca_setting',
            },
        ),
        migrations.CreateModel(
            name='AcaStaticpage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'aca_staticpage',
            },
        ),
        migrations.CreateModel(
            name='AcaTeamresultsbyevent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competitionid', models.PositiveIntegerField(db_column='competitionId')),
                ('eventid', models.PositiveIntegerField(blank=True, db_column='eventId', null=True)),
                ('racetype', models.CharField(blank=True, db_column='raceType', max_length=16, null=True)),
                ('clubid', models.PositiveIntegerField(blank=True, db_column='clubId', null=True)),
                ('racegroupid', models.PositiveIntegerField(blank=True, db_column='raceGroupId', null=True)),
                ('place', models.PositiveIntegerField(blank=True, null=True)),
                ('points', models.PositiveIntegerField(blank=True, null=True)),
                ('riders', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aca_teamresultsbyevent',
            },
        ),
        migrations.CreateModel(
            name='AcaTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'aca_track',
            },
        ),
        migrations.CreateModel(
            name='AcaTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txnid', models.CharField(blank=True, db_column='txnId', max_length=255, null=True)),
                ('dateposted', models.IntegerField(blank=True, db_column='datePosted', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cardlast4', models.CharField(blank=True, db_column='cardLast4', max_length=4, null=True)),
                ('cardfirst', models.CharField(blank=True, db_column='cardFirst', max_length=255, null=True)),
                ('cardlast', models.CharField(blank=True, db_column='cardLast', max_length=255, null=True)),
                ('cardexpmonth', models.CharField(blank=True, db_column='cardExpMonth', max_length=2, null=True)),
                ('cardexpyear', models.CharField(blank=True, db_column='cardExpYear', max_length=4, null=True)),
                ('cardcity', models.CharField(blank=True, db_column='cardCity', max_length=255, null=True)),
                ('cardstate', models.CharField(blank=True, db_column='cardState', max_length=255, null=True)),
                ('cardzip', models.CharField(blank=True, db_column='cardZip', max_length=255, null=True)),
                ('cardemail', models.CharField(blank=True, db_column='cardEmail', max_length=255, null=True)),
                ('cardaddress', models.CharField(blank=True, db_column='cardAddress', max_length=255, null=True)),
            ],
            options={
                'db_table': 'aca_transaction',
            },
        ),
        migrations.CreateModel(
            name='AcaTransactionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('productcode', models.CharField(blank=True, db_column='productCode', max_length=45, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('classdescription', models.CharField(blank=True, db_column='classDescription', max_length=255, null=True)),
                ('status', models.CharField(max_length=45)),
                ('datefilled', models.IntegerField(blank=True, db_column='dateFilled', null=True)),
                ('datecancelled', models.IntegerField(blank=True, db_column='dateCancelled', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('quantity', models.IntegerField()),
                ('targetid', models.IntegerField(blank=True, db_column='targetId', null=True)),
                ('productid', models.IntegerField(blank=True, db_column='productId', null=True)),
                ('txnid', models.ForeignKey(blank=True, db_column='txnId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acatransaction')),
            ],
            options={
                'db_table': 'aca_transaction_item',
            },
        ),
        migrations.CreateModel(
            name='AcaUsacrider',
            fields=[
                ('license', models.IntegerField(primary_key=True, serialize=False)),
                ('suspension', models.IntegerField(blank=True, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=2, null=True)),
                ('racingage', models.IntegerField(blank=True, null=True)),
                ('expdateroad', models.IntegerField(blank=True, null=True)),
                ('expdatemtn', models.IntegerField(blank=True, null=True)),
                ('rdclub', models.CharField(blank=True, max_length=255, null=True)),
                ('rdteam', models.CharField(blank=True, max_length=255, null=True)),
                ('trackclub', models.CharField(blank=True, max_length=255, null=True)),
                ('trackteam', models.CharField(blank=True, max_length=255, null=True)),
                ('cxclub', models.CharField(blank=True, max_length=255, null=True)),
                ('cxteam', models.CharField(blank=True, max_length=255, null=True)),
                ('mtnclub', models.CharField(blank=True, max_length=255, null=True)),
                ('mtnteam', models.CharField(blank=True, max_length=255, null=True)),
                ('intlteam', models.CharField(blank=True, max_length=255, null=True)),
                ('nccaclub', models.CharField(blank=True, max_length=255, null=True)),
                ('roadcat', models.CharField(blank=True, max_length=20, null=True)),
                ('trackcat', models.CharField(blank=True, max_length=20, null=True)),
                ('crosscat', models.CharField(blank=True, max_length=20, null=True)),
                ('downhillcat', models.CharField(blank=True, max_length=20, null=True)),
                ('mxcat', models.CharField(blank=True, max_length=20, null=True)),
                ('xccat', models.CharField(blank=True, max_length=20, null=True)),
                ('otcat', models.CharField(blank=True, max_length=20, null=True)),
                ('cxcat', models.CharField(blank=True, max_length=20, null=True)),
                ('citizen', models.IntegerField(blank=True, null=True)),
                ('emergencycontact', models.CharField(blank=True, max_length=255, null=True)),
                ('econtactphone', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=20, null=True)),
                ('foreignteam', models.CharField(blank=True, max_length=200, null=True)),
                ('ucicode', models.CharField(blank=True, max_length=20, null=True)),
                ('team', models.CharField(blank=True, max_length=200, null=True)),
                ('collclub', models.CharField(blank=True, max_length=200, null=True)),
                ('rdclubid', models.IntegerField(blank=True, null=True)),
                ('rdteamid', models.IntegerField(blank=True, null=True)),
                ('trackclubid', models.IntegerField(blank=True, null=True)),
                ('trackteamid', models.IntegerField(blank=True, null=True)),
                ('mtnclubid', models.IntegerField(blank=True, null=True)),
                ('mtnteamid', models.IntegerField(blank=True, null=True)),
                ('cxclubid', models.IntegerField(blank=True, null=True)),
                ('cxteamid', models.IntegerField(blank=True, null=True)),
                ('collclubid', models.IntegerField(blank=True, null=True)),
                ('cxrank', models.FloatField(blank=True, null=True)),
                ('dhcat', models.CharField(blank=True, max_length=20, null=True)),
                ('hsclub', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'aca_usacrider',
            },
        ),
        migrations.CreateModel(
            name='AcaUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acamembership', models.CharField(blank=True, db_column='acaMembership', max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('phonehome', models.CharField(blank=True, db_column='phoneHome', max_length=255, null=True)),
                ('phonework', models.CharField(blank=True, db_column='phoneWork', max_length=255, null=True)),
                ('phonecell', models.CharField(blank=True, db_column='phoneCell', max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('econtact', models.CharField(blank=True, db_column='eContact', max_length=255, null=True)),
                ('ephone', models.CharField(blank=True, db_column='ePhone', max_length=255, null=True)),
                ('joined', models.DateField(blank=True, null=True)),
                ('replacementtext', models.CharField(blank=True, db_column='replacementText', max_length=255, null=True)),
                ('createdby', models.CharField(blank=True, db_column='createdBy', max_length=255, null=True)),
                ('jerseysize', models.CharField(blank=True, db_column='jerseySize', max_length=5, null=True)),
                ('resident', models.DateField(blank=True, null=True)),
                ('optin', models.CharField(blank=True, db_column='optIn', max_length=1, null=True)),
                ('usac', models.CharField(blank=True, max_length=255, null=True)),
                ('daterenewed', models.DateField(blank=True, db_column='dateRenewed', null=True)),
                ('licensetype', models.CharField(blank=True, db_column='licenseType', max_length=255, null=True)),
                ('amountpaid', models.CharField(blank=True, db_column='amountPaid', max_length=255, null=True)),
                ('startdate', models.IntegerField(blank=True, db_column='startDate', null=True)),
                ('expires', models.IntegerField(blank=True, null=True)),
                ('drupalid', models.IntegerField(blank=True, db_column='drupalId', null=True)),
                ('changepassword', models.IntegerField(blank=True, db_column='changePassword', null=True)),
                ('isnewlicense', models.PositiveIntegerField(db_column='isNewLicense')),
                ('usacimportdate', models.IntegerField(blank=True, db_column='usacImportDate', null=True)),
                ('usacbatch', models.IntegerField(blank=True, db_column='usacBatch', null=True)),
                ('notificationdate', models.IntegerField(blank=True, db_column='notificationDate', null=True)),
                ('trackcertifiedon', models.IntegerField(blank=True, db_column='trackCertifiedOn', null=True)),
                ('lastclubmodification', models.IntegerField(blank=True, db_column='lastClubModification', null=True)),
                ('lastcredentialmodification', models.IntegerField(blank=True, db_column='lastCredentialModification', null=True)),
                ('lastmodification', models.IntegerField(blank=True, db_column='lastModification', null=True)),
                ('sms_optin', models.IntegerField(blank=True, null=True)),
                ('trackcertifiedby', models.ForeignKey(blank=True, db_column='trackCertifiedBy', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acatrack')),
            ],
            options={
                'db_table': 'aca_user',
            },
        ),
        migrations.CreateModel(
            name='AcaUserbatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(db_column='userId')),
                ('batchid', models.IntegerField(db_column='batchId')),
            ],
            options={
                'db_table': 'aca_userbatch',
            },
        ),
        migrations.CreateModel(
            name='AcaUsersingleday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('dateadded', models.IntegerField(blank=True, db_column='dateAdded', null=True)),
                ('racercategory', models.IntegerField(blank=True, db_column='racerCategory', null=True)),
                ('usac', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aca_usersingleday',
            },
        ),
        migrations.CreateModel(
            name='AcaUserproxies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentid', models.IntegerField(blank=True, db_column='parentId', null=True)),
                ('childid', models.IntegerField(blank=True, db_column='childId', null=True)),
            ],
            options={
                'db_table': 'aca_userproxies',
                'unique_together': {('parentid', 'childid')},
            },
        ),
        migrations.CreateModel(
            name='AcaUserclub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.IntegerField(blank=True, db_column='startDate', null=True)),
                ('enddate', models.IntegerField(blank=True, db_column='endDate', null=True)),
                ('discipline', models.CharField(max_length=50)),
                ('clubid', models.ForeignKey(blank=True, db_column='clubId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaclub')),
                ('userid', models.ForeignKey(blank=True, db_column='userId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acauser')),
            ],
            options={
                'db_table': 'aca_userclub',
            },
        ),
        migrations.CreateModel(
            name='AcaTransactionItemOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=500)),
                ('productoptionid', models.IntegerField(db_column='productOptionId')),
                ('productoptionvalueid', models.IntegerField(blank=True, db_column='productOptionValueId', null=True)),
                ('quantity', models.IntegerField()),
                ('transactionitemid', models.ForeignKey(db_column='transactionItemId', on_delete=django.db.models.deletion.DO_NOTHING, to='app.acatransactionitem')),
            ],
            options={
                'db_table': 'aca_transaction_item_option',
            },
        ),
        migrations.CreateModel(
            name='AcaResultsetracegroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('racegroupid', models.IntegerField(blank=True, db_column='raceGroupId', null=True)),
                ('starters', models.IntegerField(blank=True, null=True)),
                ('ugtype', models.CharField(blank=True, db_column='ugType', max_length=2, null=True)),
                ('resultsetid', models.ForeignKey(blank=True, db_column='resultSetId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaresultset')),
            ],
            options={
                'db_table': 'aca_resultsetracegroup',
            },
        ),
        migrations.CreateModel(
            name='AcaResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rsplace', models.IntegerField(blank=True, db_column='rsPlace', null=True)),
                ('place', models.IntegerField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('privatenote', models.TextField(blank=True, db_column='privateNote', null=True)),
                ('special', models.CharField(blank=True, max_length=255, null=True)),
                ('resultsetid', models.IntegerField(blank=True, db_column='resultSetId', null=True)),
                ('usac', models.IntegerField(blank=True, null=True)),
                ('lastnotified', models.IntegerField(blank=True, db_column='lastNotified', null=True)),
                ('bib', models.IntegerField(blank=True, null=True)),
                ('eventid', models.ForeignKey(blank=True, db_column='eventId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaevent')),
                ('eventracegroupid', models.ForeignKey(blank=True, db_column='eventRaceGroupId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaracegroup')),
                ('racerid', models.ForeignKey(blank=True, db_column='racerId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acauser')),
                ('useronedayid', models.ForeignKey(blank=True, db_column='userOneDayId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acausersingleday')),
            ],
            options={
                'db_table': 'aca_result',
            },
        ),
        migrations.CreateModel(
            name='AcaRacegrouptemplatemap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('templateid', models.IntegerField(blank=True, db_column='templateId', null=True)),
                ('racegroupid', models.IntegerField(blank=True, db_column='raceGroupId', null=True)),
                ('competitionids', models.CharField(blank=True, db_column='competitionIds', max_length=45, null=True)),
            ],
            options={
                'db_table': 'aca_racegrouptemplatemap',
                'unique_together': {('templateid', 'racegroupid')},
            },
        ),
        migrations.CreateModel(
            name='AcaProductoptionvalue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500)),
                ('dateadded', models.IntegerField(db_column='dateAdded')),
                ('addedby', models.CharField(db_column='addedBy', max_length=45)),
                ('abbreviation', models.CharField(blank=True, max_length=500, null=True)),
                ('additionalprice', models.DecimalField(db_column='additionalPrice', decimal_places=2, max_digits=10)),
                ('units', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('validation', models.CharField(blank=True, max_length=500, null=True)),
                ('productoptionid', models.ForeignKey(db_column='productOptionId', on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaproductoption')),
            ],
            options={
                'db_table': 'aca_productoptionvalue',
            },
        ),
        migrations.CreateModel(
            name='AcaPrintqueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('status', models.IntegerField()),
                ('isdeleted', models.IntegerField(blank=True, db_column='isDeleted', null=True)),
                ('lastdateprinted', models.IntegerField(blank=True, db_column='lastDatePrinted', null=True)),
                ('approvederrors', models.CharField(blank=True, db_column='approvedErrors', max_length=127, null=True)),
                ('queuename', models.CharField(db_column='queueName', max_length=20)),
                ('transactionitemid', models.IntegerField(blank=True, db_column='transactionItemId', null=True)),
                ('dateadded', models.IntegerField(blank=True, db_column='dateAdded', null=True)),
                ('datedeleted', models.IntegerField(blank=True, db_column='dateDeleted', null=True)),
                ('transactionid', models.ForeignKey(blank=True, db_column='transactionId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acatransaction')),
            ],
            options={
                'db_table': 'aca_printqueue',
            },
        ),
        migrations.CreateModel(
            name='AcaPointscompetitionrules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('m_tttpoints', models.IntegerField(blank=True, null=True)),
                ('f_tttpoints', models.IntegerField(blank=True, null=True)),
                ('j_tttpoints', models.IntegerField(blank=True, null=True)),
                ('utype', models.CharField(blank=True, db_column='uType', max_length=1, null=True)),
                ('uracesize', models.IntegerField(blank=True, db_column='uRaceSize', null=True)),
                ('uracetype', models.CharField(blank=True, db_column='uRaceType', max_length=2, null=True)),
                ('pointscompetitiontypeid', models.IntegerField(blank=True, db_column='pointscompetitionTypeId', null=True)),
                ('applyforgc', models.IntegerField(db_column='applyForGC')),
                ('applyforparent', models.IntegerField(db_column='applyForParent')),
                ('pointscompetitionid', models.ForeignKey(blank=True, db_column='pointsCompetitionId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acapointscompetition')),
            ],
            options={
                'db_table': 'aca_pointscompetitionrules',
            },
        ),
        migrations.CreateModel(
            name='AcaNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objecttype', models.CharField(blank=True, db_column='objectType', max_length=255, null=True)),
                ('objectid', models.IntegerField(blank=True, db_column='objectId', null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('public', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('authorid', models.ForeignKey(blank=True, db_column='authorId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acauser')),
            ],
            options={
                'db_table': 'aca_note',
            },
        ),
        migrations.CreateModel(
            name='AcaEventracegroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventid', models.ForeignKey(blank=True, db_column='eventId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaevent')),
                ('racegroupid', models.ForeignKey(blank=True, db_column='raceGroupId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaracegroup')),
            ],
            options={
                'db_table': 'aca_eventracegroup',
            },
        ),
        migrations.CreateModel(
            name='AcaEventpointscompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pointscompetitionid', models.IntegerField(blank=True, db_column='pointsCompetitionId', null=True)),
                ('eventid', models.IntegerField(blank=True, db_column='eventId', null=True)),
                ('color', models.CharField(blank=True, max_length=45, null=True)),
                ('pointscompetitiontypeid', models.IntegerField(blank=True, db_column='pointsCompetitionTypeId', null=True)),
            ],
            options={
                'db_table': 'aca_eventpointscompetition',
                'unique_together': {('eventid', 'pointscompetitionid')},
            },
        ),
        migrations.CreateModel(
            name='AcaEventpoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pointstype', models.CharField(blank=True, db_column='pointsType', max_length=255, null=True)),
                ('rsize', models.IntegerField(blank=True, db_column='rSize', null=True)),
                ('eventracegroupid', models.ForeignKey(blank=True, db_column='eventRaceGroupId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaeventracegroup')),
            ],
            options={
                'db_table': 'aca_eventpoints',
            },
        ),
        migrations.CreateModel(
            name='AcaEventphotographer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('eventid', models.ForeignKey(blank=True, db_column='eventId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaevent')),
            ],
            options={
                'db_table': 'aca_eventphotographer',
            },
        ),
        migrations.CreateModel(
            name='AcaEventclub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clubid', models.ForeignKey(blank=True, db_column='clubId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaclub')),
                ('eventid', models.ForeignKey(blank=True, db_column='eventId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaevent')),
            ],
            options={
                'db_table': 'aca_eventclub',
            },
        ),
        migrations.AddField(
            model_name='acaevent',
            name='promoter',
            field=models.ForeignKey(blank=True, db_column='promoter', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acauser'),
        ),
        migrations.CreateModel(
            name='AcaClubstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsorname', models.CharField(blank=True, db_column='sponsorName', max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('primaryfocus', models.TextField(blank=True, db_column='primaryFocus', null=True)),
                ('promotions', models.TextField(blank=True, null=True)),
                ('startdate', models.IntegerField(blank=True, db_column='startDate', null=True)),
                ('enddate', models.IntegerField(blank=True, db_column='endDate', null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('isinbadstanding', models.IntegerField(db_column='isInBadStanding')),
                ('reasonforbs', models.CharField(blank=True, db_column='reasonForBS', max_length=500, null=True)),
                ('clubid', models.ForeignKey(blank=True, db_column='clubId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acaclub')),
                ('contactperson', models.ForeignKey(blank=True, db_column='contactPerson', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.acauser')),
                ('president', models.ForeignKey(blank=True, db_column='president', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='acaUser', to='app.acauser')),
            ],
            options={
                'db_table': 'aca_clubstate',
            },
        ),
    ]
